WS = _{ (" " | "\t" | NEWLINE)+ }

var_name = { (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

if_head = _{ "IF" | "if" | "HA" | "ha" }
if_then = _{ "THEN" | "then" | "AKKOR" | "akkor" }
if_end = _{
	  "END_IF" | "end_if"
    | "IF_END" | "if_end"
    |    "FI"  |       "fi"
    | "HA_V" ~ ("É"|"E") ~ "GE"
    | "ha_v" ~ ("é"|"e") ~ "ge"
}
while_head = _{
    "WHILE" | "while"
  |  "CIKLUS AM" ~ ("Í"|"I") ~ "G"
  |  "ciklus am" ~ ("í"|"i") ~ "g"
}
while_end = _{
    "END_WHILE" | "WHILE_END"
  | "DONE" | "done"
  | "end_while" | "while_end"
  | "CIKLUS_V"~("É"|"E")~"GE"
  | "ciklus_v"~("é"|"e")~"ge"
}
print_head = _{
    "PRINT" | "print"
  | "KI" | "ki"
}
read_head = _{
    "READ" | "read"
  | "BE" | "be"
}

rest = { ((!NEWLINE ~ ANY) | string)* ~ NEWLINE? }
rest_until_then = { (string | (!if_then ~ ANY))* }
	string = _{ "\"" ~ (string_escape | !("\"" | "\\") ~ ANY)* ~ "\"" }
	string_escape = _{ "\\" ~ ("\"" | "\\" | "a" | "b" | "f" | "n" | "r" | "t" | "v" ) }


stmt = _{ WS? ~ (assign | read | print | if_stmt | while_stmt) ~ WS? }
  assign = { var_name ~ WS? ~ ":=" ~ WS? ~ rest }
  read = { read_head ~ WS? ~ ":" ~ WS? ~ rest }
  print = { print_head ~ WS? ~ ":" ~ WS? ~ rest }
  if_stmt = {
  	if_head ~ WS ~ rest_until_then ~ WS?
    ~ if_then ~ WS
    ~ stmts?
    ~ if_end
  }
  while_stmt = {
    while_head ~ WS ~ rest
    ~ stmts?
    ~ while_end
  }

stmts = { stmt+ }

input = _{ SOI ~ stmts ~ EOI }
